
Bai1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000003e0  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000574  0800057c  0001057c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000574  08000574  0001057c  2**0
                  CONTENTS
  4 .ARM          00000000  08000574  08000574  0001057c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000574  0800057c  0001057c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000574  08000574  00010574  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000578  08000578  00010578  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001057c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800057c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800057c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0001057c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001977  00000000  00000000  000105ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000679  00000000  00000000  00011f23  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000002a8  00000000  00000000  000125a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000260  00000000  00000000  00012848  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000c0bd  00000000  00000000  00012aa8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001ac2  00000000  00000000  0001eb65  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0003b63a  00000000  00000000  00020627  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      000000ce  00000000  00000000  0005bc61  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000adc  00000000  00000000  0005bd30  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	0800055c 	.word	0x0800055c

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	0800055c 	.word	0x0800055c

080001d4 <LED_Init>:
/* Generate Code */
/*
 * @func	LED_Init
 */
void LED_Init(void)
{
 80001d4:	b580      	push	{r7, lr}
 80001d6:	b082      	sub	sp, #8
 80001d8:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;

	/* Enable GPIOA Clock */
	RCC_AHB1PeriphClockCmd(LEDControl_SetClock, ENABLE);
 80001da:	2101      	movs	r1, #1
 80001dc:	2001      	movs	r0, #1
 80001de:	f000 f979 	bl	80004d4 <RCC_AHB1PeriphClockCmd>

	/* Select GPIO Push-Pull Output Mode */
	GPIO_InitStructure.GPIO_Pin = LED_PIN;
 80001e2:	2320      	movs	r3, #32
 80001e4:	603b      	str	r3, [r7, #0]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 80001e6:	2301      	movs	r3, #1
 80001e8:	713b      	strb	r3, [r7, #4]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_25MHz;
 80001ea:	2301      	movs	r3, #1
 80001ec:	717b      	strb	r3, [r7, #5]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 80001ee:	2300      	movs	r3, #0
 80001f0:	71bb      	strb	r3, [r7, #6]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 80001f2:	2301      	movs	r3, #1
 80001f4:	71fb      	strb	r3, [r7, #7]

	GPIO_Init(LED_PORT, &GPIO_InitStructure);
 80001f6:	463b      	mov	r3, r7
 80001f8:	4619      	mov	r1, r3
 80001fa:	4803      	ldr	r0, [pc, #12]	; (8000208 <LED_Init+0x34>)
 80001fc:	f000 f8db 	bl	80003b6 <GPIO_Init>
}
 8000200:	bf00      	nop
 8000202:	3708      	adds	r7, #8
 8000204:	46bd      	mov	sp, r7
 8000206:	bd80      	pop	{r7, pc}
 8000208:	40020000 	.word	0x40020000

0800020c <BUTTON_Init>:

/*
 * @func	BUTTON_Init
 */
void BUTTON_Init(void)
{
 800020c:	b580      	push	{r7, lr}
 800020e:	b082      	sub	sp, #8
 8000210:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;

	/* Enable GPIOA Clock */
	RCC_AHB1PeriphClockCmd(BUTTONControl_SetClock, ENABLE);
 8000212:	2101      	movs	r1, #1
 8000214:	2004      	movs	r0, #4
 8000216:	f000 f95d 	bl	80004d4 <RCC_AHB1PeriphClockCmd>

	/* Select GPIO Push-Pull Output Mode */
	GPIO_InitStructure.GPIO_Pin = BUTTON_PIN;
 800021a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800021e:	603b      	str	r3, [r7, #0]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 8000220:	2300      	movs	r3, #0
 8000222:	713b      	strb	r3, [r7, #4]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_25MHz;
 8000224:	2301      	movs	r3, #1
 8000226:	717b      	strb	r3, [r7, #5]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 8000228:	2300      	movs	r3, #0
 800022a:	71bb      	strb	r3, [r7, #6]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 800022c:	2301      	movs	r3, #1
 800022e:	71fb      	strb	r3, [r7, #7]

	GPIO_Init(BUTTON_PORT, &GPIO_InitStructure);
 8000230:	463b      	mov	r3, r7
 8000232:	4619      	mov	r1, r3
 8000234:	4803      	ldr	r0, [pc, #12]	; (8000244 <BUTTON_Init+0x38>)
 8000236:	f000 f8be 	bl	80003b6 <GPIO_Init>
}
 800023a:	bf00      	nop
 800023c:	3708      	adds	r7, #8
 800023e:	46bd      	mov	sp, r7
 8000240:	bd80      	pop	{r7, pc}
 8000242:	bf00      	nop
 8000244:	40020800 	.word	0x40020800

08000248 <LEDControl_SetStatus>:
 * 			GPIO_Pin - GPIO Pin number
 * 			status - status to write
 * @reval	none
 */
void LEDControl_SetStatus(GPIO_TypeDef* pGPIOx, uint8_t GPIO_Pin, uint8_t status)
{
 8000248:	b480      	push	{r7}
 800024a:	b083      	sub	sp, #12
 800024c:	af00      	add	r7, sp, #0
 800024e:	6078      	str	r0, [r7, #4]
 8000250:	460b      	mov	r3, r1
 8000252:	70fb      	strb	r3, [r7, #3]
 8000254:	4613      	mov	r3, r2
 8000256:	70bb      	strb	r3, [r7, #2]
	if (status == GPIO_PIN_SET)
 8000258:	78bb      	ldrb	r3, [r7, #2]
 800025a:	2b01      	cmp	r3, #1
 800025c:	d10e      	bne.n	800027c <LEDControl_SetStatus+0x34>
	{
		pGPIOx->BSRRL |= (1 << GPIO_Pin);
 800025e:	687b      	ldr	r3, [r7, #4]
 8000260:	8b1b      	ldrh	r3, [r3, #24]
 8000262:	b29b      	uxth	r3, r3
 8000264:	b21a      	sxth	r2, r3
 8000266:	78fb      	ldrb	r3, [r7, #3]
 8000268:	2101      	movs	r1, #1
 800026a:	fa01 f303 	lsl.w	r3, r1, r3
 800026e:	b21b      	sxth	r3, r3
 8000270:	4313      	orrs	r3, r2
 8000272:	b21b      	sxth	r3, r3
 8000274:	b29a      	uxth	r2, r3
 8000276:	687b      	ldr	r3, [r7, #4]
 8000278:	831a      	strh	r2, [r3, #24]
	}
	else /*< (status == GPIO_PIN_RESET) >*/
	{
		pGPIOx->BSRRH |= (1 << GPIO_Pin);
	}
}
 800027a:	e00d      	b.n	8000298 <LEDControl_SetStatus+0x50>
		pGPIOx->BSRRH |= (1 << GPIO_Pin);
 800027c:	687b      	ldr	r3, [r7, #4]
 800027e:	8b5b      	ldrh	r3, [r3, #26]
 8000280:	b29b      	uxth	r3, r3
 8000282:	b21a      	sxth	r2, r3
 8000284:	78fb      	ldrb	r3, [r7, #3]
 8000286:	2101      	movs	r1, #1
 8000288:	fa01 f303 	lsl.w	r3, r1, r3
 800028c:	b21b      	sxth	r3, r3
 800028e:	4313      	orrs	r3, r2
 8000290:	b21b      	sxth	r3, r3
 8000292:	b29a      	uxth	r2, r3
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	835a      	strh	r2, [r3, #26]
}
 8000298:	bf00      	nop
 800029a:	370c      	adds	r7, #12
 800029c:	46bd      	mov	sp, r7
 800029e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002a2:	4770      	bx	lr

080002a4 <ButtonRead_Status>:
 * @param	pGPIOx - GPIO Port number
 * 			GPIO_Pin - GPIO Pin number
 * @reval	Pin Status
 */
uint8_t ButtonRead_Status(GPIO_TypeDef* pGPIOx, uint32_t GPIO_Pin)
{
 80002a4:	b480      	push	{r7}
 80002a6:	b085      	sub	sp, #20
 80002a8:	af00      	add	r7, sp, #0
 80002aa:	6078      	str	r0, [r7, #4]
 80002ac:	6039      	str	r1, [r7, #0]
	uint8_t value;

	value = (uint8_t)(((pGPIOx->IDR) >> GPIO_Pin) & 0x00000001);
 80002ae:	687b      	ldr	r3, [r7, #4]
 80002b0:	691a      	ldr	r2, [r3, #16]
 80002b2:	683b      	ldr	r3, [r7, #0]
 80002b4:	fa22 f303 	lsr.w	r3, r2, r3
 80002b8:	b2db      	uxtb	r3, r3
 80002ba:	f003 0301 	and.w	r3, r3, #1
 80002be:	73fb      	strb	r3, [r7, #15]

	return value;
 80002c0:	7bfb      	ldrb	r3, [r7, #15]
}
 80002c2:	4618      	mov	r0, r3
 80002c4:	3714      	adds	r7, #20
 80002c6:	46bd      	mov	sp, r7
 80002c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002cc:	4770      	bx	lr
	...

080002d0 <main>:
#include "GPIO_Config.h"

void delay_ms(uint32_t);

int main(void)
{
 80002d0:	b580      	push	{r7, lr}
 80002d2:	b082      	sub	sp, #8
 80002d4:	af00      	add	r7, sp, #0
	LED_Init();
 80002d6:	f7ff ff7d 	bl	80001d4 <LED_Init>
	BUTTON_Init();
 80002da:	f7ff ff97 	bl	800020c <BUTTON_Init>
	uint8_t led_state = 0;
 80002de:	2300      	movs	r3, #0
 80002e0:	71fb      	strb	r3, [r7, #7]

	while(1)
	{
		if (ButtonRead_Status(BUTTON_PORT, BUTTON_PIN13) == GPIO_PIN_LOW)
 80002e2:	210d      	movs	r1, #13
 80002e4:	480f      	ldr	r0, [pc, #60]	; (8000324 <main+0x54>)
 80002e6:	f7ff ffdd 	bl	80002a4 <ButtonRead_Status>
 80002ea:	4603      	mov	r3, r0
 80002ec:	2b00      	cmp	r3, #0
 80002ee:	d1f8      	bne.n	80002e2 <main+0x12>
		{
			delay_ms(20);
 80002f0:	2014      	movs	r0, #20
 80002f2:	f000 f81b 	bl	800032c <delay_ms>
			while (ButtonRead_Status(BUTTON_PORT, BUTTON_PIN13) == GPIO_PIN_LOW);
 80002f6:	bf00      	nop
 80002f8:	210d      	movs	r1, #13
 80002fa:	480a      	ldr	r0, [pc, #40]	; (8000324 <main+0x54>)
 80002fc:	f7ff ffd2 	bl	80002a4 <ButtonRead_Status>
 8000300:	4603      	mov	r3, r0
 8000302:	2b00      	cmp	r3, #0
 8000304:	d0f8      	beq.n	80002f8 <main+0x28>
			if (led_state == GPIO_PIN_LOW)
 8000306:	79fb      	ldrb	r3, [r7, #7]
 8000308:	2b00      	cmp	r3, #0
 800030a:	d102      	bne.n	8000312 <main+0x42>
			{
				led_state = GPIO_PIN_HIGH;
 800030c:	2301      	movs	r3, #1
 800030e:	71fb      	strb	r3, [r7, #7]
 8000310:	e001      	b.n	8000316 <main+0x46>
			}
			else /*< (led_state == GPIO_PIN_HIGH) >*/
			{
				led_state = GPIO_PIN_LOW;
 8000312:	2300      	movs	r3, #0
 8000314:	71fb      	strb	r3, [r7, #7]
			}
			LEDControl_SetStatus(LED_PORT, LED_PIN5, led_state);
 8000316:	79fb      	ldrb	r3, [r7, #7]
 8000318:	461a      	mov	r2, r3
 800031a:	2105      	movs	r1, #5
 800031c:	4802      	ldr	r0, [pc, #8]	; (8000328 <main+0x58>)
 800031e:	f7ff ff93 	bl	8000248 <LEDControl_SetStatus>
		if (ButtonRead_Status(BUTTON_PORT, BUTTON_PIN13) == GPIO_PIN_LOW)
 8000322:	e7de      	b.n	80002e2 <main+0x12>
 8000324:	40020800 	.word	0x40020800
 8000328:	40020000 	.word	0x40020000

0800032c <delay_ms>:
		}
	}
}

void delay_ms(uint32_t time)
{
 800032c:	b480      	push	{r7}
 800032e:	b085      	sub	sp, #20
 8000330:	af00      	add	r7, sp, #0
 8000332:	6078      	str	r0, [r7, #4]
	while(time--)
 8000334:	e00a      	b.n	800034c <delay_ms+0x20>
	{
		for (uint32_t i = 0; i < 5000; i++);
 8000336:	2300      	movs	r3, #0
 8000338:	60fb      	str	r3, [r7, #12]
 800033a:	e002      	b.n	8000342 <delay_ms+0x16>
 800033c:	68fb      	ldr	r3, [r7, #12]
 800033e:	3301      	adds	r3, #1
 8000340:	60fb      	str	r3, [r7, #12]
 8000342:	68fb      	ldr	r3, [r7, #12]
 8000344:	f241 3287 	movw	r2, #4999	; 0x1387
 8000348:	4293      	cmp	r3, r2
 800034a:	d9f7      	bls.n	800033c <delay_ms+0x10>
	while(time--)
 800034c:	687b      	ldr	r3, [r7, #4]
 800034e:	1e5a      	subs	r2, r3, #1
 8000350:	607a      	str	r2, [r7, #4]
 8000352:	2b00      	cmp	r3, #0
 8000354:	d1ef      	bne.n	8000336 <delay_ms+0xa>
	}
}
 8000356:	bf00      	nop
 8000358:	bf00      	nop
 800035a:	3714      	adds	r7, #20
 800035c:	46bd      	mov	sp, r7
 800035e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000362:	4770      	bx	lr

08000364 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000364:	480d      	ldr	r0, [pc, #52]	; (800039c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000366:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000368:	480d      	ldr	r0, [pc, #52]	; (80003a0 <LoopForever+0x6>)
  ldr r1, =_edata
 800036a:	490e      	ldr	r1, [pc, #56]	; (80003a4 <LoopForever+0xa>)
  ldr r2, =_sidata
 800036c:	4a0e      	ldr	r2, [pc, #56]	; (80003a8 <LoopForever+0xe>)
  movs r3, #0
 800036e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000370:	e002      	b.n	8000378 <LoopCopyDataInit>

08000372 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000372:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000374:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000376:	3304      	adds	r3, #4

08000378 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000378:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800037a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800037c:	d3f9      	bcc.n	8000372 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800037e:	4a0b      	ldr	r2, [pc, #44]	; (80003ac <LoopForever+0x12>)
  ldr r4, =_ebss
 8000380:	4c0b      	ldr	r4, [pc, #44]	; (80003b0 <LoopForever+0x16>)
  movs r3, #0
 8000382:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000384:	e001      	b.n	800038a <LoopFillZerobss>

08000386 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000386:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000388:	3204      	adds	r2, #4

0800038a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800038a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800038c:	d3fb      	bcc.n	8000386 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 800038e:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 8000392:	f000 f8bf 	bl	8000514 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000396:	f7ff ff9b 	bl	80002d0 <main>

0800039a <LoopForever>:

LoopForever:
    b LoopForever
 800039a:	e7fe      	b.n	800039a <LoopForever>
  ldr   r0, =_estack
 800039c:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80003a0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003a4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80003a8:	0800057c 	.word	0x0800057c
  ldr r2, =_sbss
 80003ac:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80003b0:	2000001c 	.word	0x2000001c

080003b4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003b4:	e7fe      	b.n	80003b4 <ADC_IRQHandler>

080003b6 <GPIO_Init>:
 80003b6:	b480      	push	{r7}
 80003b8:	b087      	sub	sp, #28
 80003ba:	af00      	add	r7, sp, #0
 80003bc:	6078      	str	r0, [r7, #4]
 80003be:	6039      	str	r1, [r7, #0]
 80003c0:	2300      	movs	r3, #0
 80003c2:	617b      	str	r3, [r7, #20]
 80003c4:	2300      	movs	r3, #0
 80003c6:	613b      	str	r3, [r7, #16]
 80003c8:	2300      	movs	r3, #0
 80003ca:	60fb      	str	r3, [r7, #12]
 80003cc:	2300      	movs	r3, #0
 80003ce:	617b      	str	r3, [r7, #20]
 80003d0:	e076      	b.n	80004c0 <GPIO_Init+0x10a>
 80003d2:	2201      	movs	r2, #1
 80003d4:	697b      	ldr	r3, [r7, #20]
 80003d6:	fa02 f303 	lsl.w	r3, r2, r3
 80003da:	613b      	str	r3, [r7, #16]
 80003dc:	683b      	ldr	r3, [r7, #0]
 80003de:	681b      	ldr	r3, [r3, #0]
 80003e0:	693a      	ldr	r2, [r7, #16]
 80003e2:	4013      	ands	r3, r2
 80003e4:	60fb      	str	r3, [r7, #12]
 80003e6:	68fa      	ldr	r2, [r7, #12]
 80003e8:	693b      	ldr	r3, [r7, #16]
 80003ea:	429a      	cmp	r2, r3
 80003ec:	d165      	bne.n	80004ba <GPIO_Init+0x104>
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	681a      	ldr	r2, [r3, #0]
 80003f2:	697b      	ldr	r3, [r7, #20]
 80003f4:	005b      	lsls	r3, r3, #1
 80003f6:	2103      	movs	r1, #3
 80003f8:	fa01 f303 	lsl.w	r3, r1, r3
 80003fc:	43db      	mvns	r3, r3
 80003fe:	401a      	ands	r2, r3
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	601a      	str	r2, [r3, #0]
 8000404:	687b      	ldr	r3, [r7, #4]
 8000406:	681a      	ldr	r2, [r3, #0]
 8000408:	683b      	ldr	r3, [r7, #0]
 800040a:	791b      	ldrb	r3, [r3, #4]
 800040c:	4619      	mov	r1, r3
 800040e:	697b      	ldr	r3, [r7, #20]
 8000410:	005b      	lsls	r3, r3, #1
 8000412:	fa01 f303 	lsl.w	r3, r1, r3
 8000416:	431a      	orrs	r2, r3
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	601a      	str	r2, [r3, #0]
 800041c:	683b      	ldr	r3, [r7, #0]
 800041e:	791b      	ldrb	r3, [r3, #4]
 8000420:	2b01      	cmp	r3, #1
 8000422:	d003      	beq.n	800042c <GPIO_Init+0x76>
 8000424:	683b      	ldr	r3, [r7, #0]
 8000426:	791b      	ldrb	r3, [r3, #4]
 8000428:	2b02      	cmp	r3, #2
 800042a:	d12e      	bne.n	800048a <GPIO_Init+0xd4>
 800042c:	687b      	ldr	r3, [r7, #4]
 800042e:	689a      	ldr	r2, [r3, #8]
 8000430:	697b      	ldr	r3, [r7, #20]
 8000432:	005b      	lsls	r3, r3, #1
 8000434:	2103      	movs	r1, #3
 8000436:	fa01 f303 	lsl.w	r3, r1, r3
 800043a:	43db      	mvns	r3, r3
 800043c:	401a      	ands	r2, r3
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	609a      	str	r2, [r3, #8]
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	689a      	ldr	r2, [r3, #8]
 8000446:	683b      	ldr	r3, [r7, #0]
 8000448:	795b      	ldrb	r3, [r3, #5]
 800044a:	4619      	mov	r1, r3
 800044c:	697b      	ldr	r3, [r7, #20]
 800044e:	005b      	lsls	r3, r3, #1
 8000450:	fa01 f303 	lsl.w	r3, r1, r3
 8000454:	431a      	orrs	r2, r3
 8000456:	687b      	ldr	r3, [r7, #4]
 8000458:	609a      	str	r2, [r3, #8]
 800045a:	687b      	ldr	r3, [r7, #4]
 800045c:	685a      	ldr	r2, [r3, #4]
 800045e:	697b      	ldr	r3, [r7, #20]
 8000460:	b29b      	uxth	r3, r3
 8000462:	4619      	mov	r1, r3
 8000464:	2301      	movs	r3, #1
 8000466:	408b      	lsls	r3, r1
 8000468:	43db      	mvns	r3, r3
 800046a:	401a      	ands	r2, r3
 800046c:	687b      	ldr	r3, [r7, #4]
 800046e:	605a      	str	r2, [r3, #4]
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	685b      	ldr	r3, [r3, #4]
 8000474:	683a      	ldr	r2, [r7, #0]
 8000476:	7992      	ldrb	r2, [r2, #6]
 8000478:	4611      	mov	r1, r2
 800047a:	697a      	ldr	r2, [r7, #20]
 800047c:	b292      	uxth	r2, r2
 800047e:	fa01 f202 	lsl.w	r2, r1, r2
 8000482:	b292      	uxth	r2, r2
 8000484:	431a      	orrs	r2, r3
 8000486:	687b      	ldr	r3, [r7, #4]
 8000488:	605a      	str	r2, [r3, #4]
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	68da      	ldr	r2, [r3, #12]
 800048e:	697b      	ldr	r3, [r7, #20]
 8000490:	b29b      	uxth	r3, r3
 8000492:	005b      	lsls	r3, r3, #1
 8000494:	2103      	movs	r1, #3
 8000496:	fa01 f303 	lsl.w	r3, r1, r3
 800049a:	43db      	mvns	r3, r3
 800049c:	401a      	ands	r2, r3
 800049e:	687b      	ldr	r3, [r7, #4]
 80004a0:	60da      	str	r2, [r3, #12]
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	68da      	ldr	r2, [r3, #12]
 80004a6:	683b      	ldr	r3, [r7, #0]
 80004a8:	79db      	ldrb	r3, [r3, #7]
 80004aa:	4619      	mov	r1, r3
 80004ac:	697b      	ldr	r3, [r7, #20]
 80004ae:	005b      	lsls	r3, r3, #1
 80004b0:	fa01 f303 	lsl.w	r3, r1, r3
 80004b4:	431a      	orrs	r2, r3
 80004b6:	687b      	ldr	r3, [r7, #4]
 80004b8:	60da      	str	r2, [r3, #12]
 80004ba:	697b      	ldr	r3, [r7, #20]
 80004bc:	3301      	adds	r3, #1
 80004be:	617b      	str	r3, [r7, #20]
 80004c0:	697b      	ldr	r3, [r7, #20]
 80004c2:	2b0f      	cmp	r3, #15
 80004c4:	d985      	bls.n	80003d2 <GPIO_Init+0x1c>
 80004c6:	bf00      	nop
 80004c8:	371c      	adds	r7, #28
 80004ca:	46bd      	mov	sp, r7
 80004cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004d0:	4770      	bx	lr
	...

080004d4 <RCC_AHB1PeriphClockCmd>:
 80004d4:	b480      	push	{r7}
 80004d6:	b083      	sub	sp, #12
 80004d8:	af00      	add	r7, sp, #0
 80004da:	6078      	str	r0, [r7, #4]
 80004dc:	460b      	mov	r3, r1
 80004de:	70fb      	strb	r3, [r7, #3]
 80004e0:	78fb      	ldrb	r3, [r7, #3]
 80004e2:	2b00      	cmp	r3, #0
 80004e4:	d006      	beq.n	80004f4 <RCC_AHB1PeriphClockCmd+0x20>
 80004e6:	4b0a      	ldr	r3, [pc, #40]	; (8000510 <RCC_AHB1PeriphClockCmd+0x3c>)
 80004e8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80004ea:	4909      	ldr	r1, [pc, #36]	; (8000510 <RCC_AHB1PeriphClockCmd+0x3c>)
 80004ec:	687b      	ldr	r3, [r7, #4]
 80004ee:	4313      	orrs	r3, r2
 80004f0:	630b      	str	r3, [r1, #48]	; 0x30
 80004f2:	e006      	b.n	8000502 <RCC_AHB1PeriphClockCmd+0x2e>
 80004f4:	4b06      	ldr	r3, [pc, #24]	; (8000510 <RCC_AHB1PeriphClockCmd+0x3c>)
 80004f6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	43db      	mvns	r3, r3
 80004fc:	4904      	ldr	r1, [pc, #16]	; (8000510 <RCC_AHB1PeriphClockCmd+0x3c>)
 80004fe:	4013      	ands	r3, r2
 8000500:	630b      	str	r3, [r1, #48]	; 0x30
 8000502:	bf00      	nop
 8000504:	370c      	adds	r7, #12
 8000506:	46bd      	mov	sp, r7
 8000508:	f85d 7b04 	ldr.w	r7, [sp], #4
 800050c:	4770      	bx	lr
 800050e:	bf00      	nop
 8000510:	40023800 	.word	0x40023800

08000514 <__libc_init_array>:
 8000514:	b570      	push	{r4, r5, r6, lr}
 8000516:	4d0d      	ldr	r5, [pc, #52]	; (800054c <__libc_init_array+0x38>)
 8000518:	4c0d      	ldr	r4, [pc, #52]	; (8000550 <__libc_init_array+0x3c>)
 800051a:	1b64      	subs	r4, r4, r5
 800051c:	10a4      	asrs	r4, r4, #2
 800051e:	2600      	movs	r6, #0
 8000520:	42a6      	cmp	r6, r4
 8000522:	d109      	bne.n	8000538 <__libc_init_array+0x24>
 8000524:	4d0b      	ldr	r5, [pc, #44]	; (8000554 <__libc_init_array+0x40>)
 8000526:	4c0c      	ldr	r4, [pc, #48]	; (8000558 <__libc_init_array+0x44>)
 8000528:	f000 f818 	bl	800055c <_init>
 800052c:	1b64      	subs	r4, r4, r5
 800052e:	10a4      	asrs	r4, r4, #2
 8000530:	2600      	movs	r6, #0
 8000532:	42a6      	cmp	r6, r4
 8000534:	d105      	bne.n	8000542 <__libc_init_array+0x2e>
 8000536:	bd70      	pop	{r4, r5, r6, pc}
 8000538:	f855 3b04 	ldr.w	r3, [r5], #4
 800053c:	4798      	blx	r3
 800053e:	3601      	adds	r6, #1
 8000540:	e7ee      	b.n	8000520 <__libc_init_array+0xc>
 8000542:	f855 3b04 	ldr.w	r3, [r5], #4
 8000546:	4798      	blx	r3
 8000548:	3601      	adds	r6, #1
 800054a:	e7f2      	b.n	8000532 <__libc_init_array+0x1e>
 800054c:	08000574 	.word	0x08000574
 8000550:	08000574 	.word	0x08000574
 8000554:	08000574 	.word	0x08000574
 8000558:	08000578 	.word	0x08000578

0800055c <_init>:
 800055c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800055e:	bf00      	nop
 8000560:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000562:	bc08      	pop	{r3}
 8000564:	469e      	mov	lr, r3
 8000566:	4770      	bx	lr

08000568 <_fini>:
 8000568:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800056a:	bf00      	nop
 800056c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800056e:	bc08      	pop	{r3}
 8000570:	469e      	mov	lr, r3
 8000572:	4770      	bx	lr
